{% extends 'public/base_public.html.twig' %}
{% block title %} Privacia - Coordonnées{% endblock %}
{% block breadcrumb_title %} {{ 'Public.Contact.BreadcrumbTitle'| trans({}, "messages", locale) }} {% endblock %}
{% block breadcrumb_content %} {{ 'Public.Contact.BreadcrumbContent'| trans({}, "messages", locale) }} {% endblock %}

{% block main_content %}
    <section class="page-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="m-b-40">
                        {{ 'Public.Contact.Title'| trans({}, "messages", locale) }}
                    </h1>
                </div>
            </div>
            <form id="contactDetailForm" action="" method="post">
                <div class="row form-container">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>{{ 'Public.Contact.BusinessName'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.businessName, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.businessName) }}
                            <div class="invalid-feedback">
                                Champ non renseigné
                            </div>
                        </div>
                        <div class="form-group paprec-flex align-items_center m-t-25 m-b-10">
                            <label>{{ 'Public.Contact.Civility'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.civility, {'attr': {'class': 'form-check form-check-inline radio-form'}}) }}
                            {{ form_errors(form.civility) }}
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.LastName'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.lastName, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.lastName) }}
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.FirstName'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.firstName, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.firstName) }}
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.Email'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.email) }}
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.Phone'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.phone, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.phone) }}
                            <span id="phone-number-info">
                                {{ 'Public.Contact.PhoneNumberInfo'| trans({}, "messages", locale) }}
                            </span>
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.Staff'| trans({}, "messages", locale) }} :</label>
                            <select id="contact_staff_select" class="form-control">
                                <option value="" selected disabled hidden></option>
                                {% for opt in form.staff.vars.choices %}#}
                                    <option value="{{ opt.value }}"
                                            {% if form.staff.vars.data == opt.value %}selected{% endif %}>{{ opt.label|trans({}, "messages", locale) }}</option>
                                {% endfor %}
                            </select>
                            {{ form_errors(form.staff) }}
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.Comment'| trans({}, "messages", locale) }} :</label>
                            {{ form_widget(form.comment, {'attr': {'class': 'form-control', 'rows': '11'}}) }}
                            {{ form_errors(form.comment) }}
                        </div>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.Access'| trans({}, "messages", locale) }}* :</label>
                            <select id="contact_access_select" class="form-control">
                                <option value="" selected disabled hidden></option>
                                {% for opt in form.access.vars.choices %}
                                    <option value="{{ opt.value }}"
                                            {% if form.access.vars.data == opt.value %}selected{% endif %}>{{ opt.label|trans({}, "messages", locale) }}</option>
                                {% endfor %}
                            </select>
                            {{ form_errors(form.access) }}
                        </div>
                        <div class="form-group" id="floorNumber">
                            <label>{{ 'Public.Contact.FloorNumber'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.floorNumber, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.floorNumber) }}
                        </div>
                        {{ form_widget(form.staff, {'attr': {'class': 'contact_staff_input'}}) }}
                        {{ form_widget(form.access, {'attr': {'class': 'contact_access_input'}}) }}
                    </div>
                    <div class="col-md-6">
                        <div class="form-group paprec-flex align-items_center m-t-30">
                            <label>{{ 'Public.Contact.IsMultisite'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.isMultisite, {'attr': {'class': 'form-check form-check-inline radio-form'}}) }}
                            {{ form_errors(form.isMultisite) }}
                        </div>
                        <h2 class="color-secondary m-t-25 m-b-15">{{ 'Public.Contact.DeliveryAddress'| trans({}, "messages", locale) }}</h2>
                        <div class="form-group">
                            <label>{{ 'Public.Contact.PostalCode'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.postalCode, {'attr': {'class': 'form-control address-field', 'data-url': path('paprec_public_postalCode_autocomplete') }}) }}
                            {{ form_errors(form.postalCode) }}
                        </div>
                        <div class="form-group address-content">
                            <label>{{ 'Public.Contact.Address'| trans({}, "messages", locale) }}* :</label>
                            <input id="addressAutocomplete" class="form-control address-content address-field"/>
                            {{ form_widget(form.address, {'attr': {'class': 'form-control address-field', 'hidden': true}}) }}
                            {{ form_errors(form.address) }}
                        </div>
                        <div class="form-group address-content">
                            <label>{{ 'Public.Contact.AddressDetail'| trans({}, "messages", locale) }} :</label>
                            {{ form_widget(form.addressDetail, {'attr': {'class': 'form-control address-field'}}) }}
                            {{ form_errors(form.addressDetail) }}
                        </div>
{#                        <div class="form-group address-content">#}
{#                            {{ form_widget(form.city, {'attr': {'class': 'form-control'}}) }}#}
{#                            {{ form_errors(form.city) }}#}
{#                        </div>#}
                        {% if cart.otherNeeds and cart.otherNeeds|length > 0 %}
                            <div class="form-group">
                                <label>{{ 'Public.Catalog.Other-Needs'| trans({}, "messages", locale) }}</label>
                                <ul>
                                    {% for otherNeed in cart.otherNeeds %}
                                        {% if otherNeed.language|lower == locale|lower %}
                                            <li class="ml-2 contact-other-need">- {{ otherNeed.name }}</li>
                                        {% endif %}
                                    {% endfor %}
                                </ul>
                            </div>
                        {% endif %}
                        <span id="multisite-info">
                                {{ 'Public.Contact.isMultisiteInfo'| trans({}, "messages", locale) }}
                            </span>

                        <h2 class="color-secondary m-t-25 m-b-15">{{ 'Public.Contact.BillingAddress'| trans({}, "messages", locale) }}</h2>
                        <div class="form-group paprec-flex align-items_center">
                            <label>{{ 'Public.Contact.IsSameAddress'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.isSameAddress, {'attr': {'class': 'form-check form-check-inline radio-form'}}) }}
                            {{ form_errors(form.isSameAddress) }}
                        </div>
                        <label class="billing-address-label">{{ 'Public.Contact.Address'| trans({}, "messages", locale) }}* :</label>
                        <input id="billingAddressAutocomplete" class="form-control billing-address-field"/>
                        <div class="form-group">
                            {{ form_widget(form.billingAddress, {'attr': {'class': 'form-control billing-address-field', 'hidden': true}}) }}
                            {{ form_errors(form.billingAddress) }}
                        </div>
                        <div class="form-group">
                            {{ form_widget(form.billingPostalCode, {'attr': {'class': 'form-control billing-address-field', 'hidden': true}}) }}
                            {{ form_errors(form.billingPostalCode) }}
                        </div>
                        <div class="form-group">
                            {{ form_widget(form.billingCity, {'attr': {'class': 'form-control billing-address-field', 'hidden': true}}) }}
                            {{ form_errors(form.billingCity) }}
                        </div>

                        <h2 class="color-secondary m-t-25 m-b-15">{{ 'Public.Contact.Signatory'| trans({}, "messages", locale) }}</h2>
                        <div class="form-group paprec-flex align-items_center">
                            <label>{{ 'Public.Contact.IsSameSignatory'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.isSameSignatory, {'attr': {'class': 'form-check form-check-inline radio-form'}}) }}
                            {{ form_errors(form.isSameSignatory) }}
                        </div>
                        <div class="form-group">
                            <label class="signatory-label">{{ 'Public.Contact.SignatoryLastName1'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.signatoryLastName1, {'attr': {'class': 'form-control signatory-field'}}) }}
                            {{ form_errors(form.signatoryLastName1) }}
                        </div>
                        <div class="form-group">
                            <label class="signatory-label">{{ 'Public.Contact.SignatoryFirstName1'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.signatoryFirstName1, {'attr': {'class': 'form-control signatory-field'}}) }}
                            {{ form_errors(form.signatoryFirstName1) }}
                        </div>
                        <div class="form-group">
                            <label class="signatory-label">{{ 'Public.Contact.SignatoryTitle1'| trans({}, "messages", locale) }}* :</label>
                            {{ form_widget(form.signatoryTitle1, {'attr': {'class': 'form-control signatory-field'}}) }}
                            {{ form_errors(form.signatoryTitle1) }}
                        </div>
{#                        {{ google_recaptcha_site_key }}#}
                        <button type="submit"
                                id="contactDetailFormSubmitButton"
                                data-key="{{ google_recaptcha_site_key }}"
                                class="m-y-25 btn btn__blue valid">{{ 'Public.Contact.SendRequest'| trans({}, "messages", locale) }}</button>
                    </div>
                </div>
                {{ form_rest(form) }}
            </form>

        </div>
    </section>
    <div class="overlay"></div>
{% endblock %}
{% block javascripts %}
    <script src="https://www.google.com/recaptcha/api.js?render={{ google_recaptcha_site_key }}"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key={{ google_places_secret_key }}"></script>
    <script>
        $(function () {
            // Par défaut, les champs Signataire sont identiques au contact, donc ils ne doivent pas apparaître en arrivant
            // sur cette page
            $('.signatory-label').hide();
            $('.signatory-field').hide().prop('required', false);
            $('.signatory-field').val('');

            // Par défaut, les champs de Facturation sont identiques à l'adresse de prestation, donc ils ne doivent pas
            // apparaître en arrivant sur cette page
            $('.billing-address-label').hide();
            $('.billing-address-field').hide().prop('required', false);
            $('.billing-address-field').val('');

            $('.address-content').hide();

            google.maps.event.addDomListener(window, 'load', function() {
                var element = document.getElementById('billingAddressAutocomplete');

                if (element) {
                    var autocomplete = new google.maps.places.Autocomplete(element, { types: ['geocode'] });
                    autocomplete.setComponentRestrictions({
                        country: ["fr"],
                    });
                    google.maps.event.addListener(autocomplete, 'place_changed', function() {

                        var place = this.getPlace();

                        for (var i in place.address_components) {
                            var component = place.address_components[i];

                            var componentType = component.types[0];

                            switch (componentType) {
                                case 'postal_code': {
                                    $('#paprec_catalogbundle_quote_request_public_billingPostalCode').val(component.long_name);
                                    break;
                                }

                                case 'street_number': {
                                    $('#paprec_catalogbundle_quote_request_public_billingAddress').val(component.long_name);
                                    break;
                                }

                                case 'route': {
                                    var text = $('#paprec_catalogbundle_quote_request_public_billingAddress').val();

                                    text += ' ' + component.long_name;

                                    $('#paprec_catalogbundle_quote_request_public_billingAddress').val(text);
                                    break;
                                }

                                case 'locality': {
                                    $('#paprec_catalogbundle_quote_request_public_billingCity').val(component.long_name);
                                    break;
                                }
                            }
                        }

                    });
                }
            });

            google.maps.event.addDomListener(window, 'load', function() {
                var element = document.getElementById('addressAutocomplete');

                if (element) {
                    var autocomplete = new google.maps.places.Autocomplete(element, { types: ['geocode'] });
                    autocomplete.setComponentRestrictions({
                        country: ["fr"],
                    });
                    google.maps.event.addListener(autocomplete, 'place_changed', function() {

                        var place = this.getPlace();

                        for (var i in place.address_components) {
                            var component = place.address_components[i];

                            var componentType = component.types[0];

                            switch (componentType) {
                                case 'street_number': {
                                    $('#paprec_catalogbundle_quote_request_public_address').val(component.long_name);
                                    break;
                                }

                                case 'route': {
                                    var text = $('#paprec_catalogbundle_quote_request_public_address').val();

                                    text += ' ' + component.long_name;

                                    $('#paprec_catalogbundle_quote_request_public_address').val(text);
                                    break;
                                }
                            }
                        }

                    });
                }
            });

            $('.progress-bar').css('width', '65%').attr('aria-valuenow', '70%');

        });

    </script>
{% endblock %}

